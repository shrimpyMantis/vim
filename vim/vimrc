"+-----------------------------------------------------------------------------+
"|                        Xander Rall ViM Config                               |
"+-----------------------------------------------------------------------------+
"|                        General Settings                                     |
"+-----------------------------------------------------------------------------+


"*************************Lines, columns and numbering**************************

set number relativenumber

set linebreak
set showbreak=↪
set textwidth=80

set numberwidth=2
set colorcolumn=80

set autoindent
set cindent
set smartindent

set noexpandtab
set smarttab
set shiftwidth=4
set softtabstop=4
set tabstop=4

set scrolloff=11
set sidescrolloff=8

set hidden

"*************************Panes*************************************************

set splitright

"*************************Language**********************************************

set ignorecase
set smartcase
set list
set listchars=tab:►\ ,trail:•

"*************************Searching*********************************************

set hlsearch
set smartcase
set ignorecase
set incsearch

"*************************Miscelaneous******************************************

set confirm
set ruler

set exrc

set autowriteall

set undolevels=1000
set backspace=indent,eol,start

set laststatus=2

set updatetime=300
set redrawtime=10000

"+-----------------------------------------------------------------------------+
"|                        Vim-Plug                                             |
"+-----------------------------------------------------------------------------+


let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

source ~/.vim/plugins/tender.vim
source ~/.vim/plugins/lightline.vim
source ~/.vim/plugins/fzf.vim
source ~/.vim/plugins/nerdtree.vim
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
Plug 'hrsh7th/vim-vsnip'
Plug 'hrsh7th/vim-vsnip-integ'

call plug#end()

"****************************Colorscheme****************************************
syntax enable
colorscheme tender

"****************************Snippets for ViM***********************************
set foldmethod=expr
  \ foldexpr=lsp#ui#vim#folding#foldexpr()
  \ foldtext=lsp#ui#vim#folding#foldtext()

inoremap <expr> <Tab>   pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr>    pumvisible() ? asyncomplete#close_popup() : "\<cr>"

" Expand
imap <expr> <C-j>   vsnip#expandable()  ? '<Plug>(vsnip-expand)'  : '<C-j>'
smap <expr> <C-j>   vsnip#expandable()  ? '<Plug>(vsnip-expand)'  : '<C-j>'

" Expand or jump
imap <expr> <C-l>   vsnip#available(1)  ? '<Plug>(vsnip-expand-or-jump)' : '<C-l>'
smap <expr> <C-l>   vsnip#available(1)  ? '<Plug>(vsnip-expand-or-jump)' : '<C-l>'

" Jump forward or backward
imap <expr> <Tab>   vsnip#jumpable(1)   ? '<Plug>(vsnip-jump-next)'      : '<Tab>'
smap <expr> <Tab>   vsnip#jumpable(1)   ? '<Plug>(vsnip-jump-next)'      : '<Tab>'
imap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'
smap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'

" Select or cut text to use as $TM_SELECTED_TEXT in the next snippet.
" See https://github.com/hrsh7th/vim-vsnip/pull/50
nmap        s   <Plug>(vsnip-select-text)
xmap        s   <Plug>(vsnip-select-text)
nmap        S   <Plug>(vsnip-cut-text)
xmap        S   <Plug>(vsnip-cut-text)

" If you want to use snippet for multiple filetypes, you can `g:vsnip_filetypes` for it.
let g:vsnip_filetypes = {}
let g:vsnip_filetypes.javascriptreact = ['javascript']
let g:vsnip_filetypes.typescriptreact = ['typescript']

" keybinds
source ~/.vim/base/keybinds.vim

